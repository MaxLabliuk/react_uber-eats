{"version":3,"sources":["store/actions.js","store/index.js","components/RestaurantCard/RestaurantCard.js","components/RestaurantsListPage/RestaurantsListPage.js","store/selectors.js","components/RestaurantsListPage/index.js","App.js","index.js"],"names":["ACTION_TYPES","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","initialState","restaurantsListData","store","createStore","state","arguments","length","undefined","action","type","payload","Object","objectSpread2","applyMiddleware","apply","RestaurantCard","props","imageUrl","categories","title","etaRange","react_default","a","createElement","className","src","alt","join","defaultProps","RestaurantsListPage","_ref","restaurantsData","loadRestaurants","useEffect","map","restaurant","uuid","heroImageUrl","RestaurantCard_RestaurantCard_RestaurantCard","key","text","selectRestaurantsList","createSelector","feedItems","storesMap","_ref2","mapDispatchToProps","dispatch","fetch","then","res","json","data","saveRestaurants","Enhanced","connect","App","es","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"kSAAaA,EACO,mBCGdC,EAAmBC,OAAOC,sCAC7BC,cAEGC,EAAc,CAACC,KAEfC,EAAe,CACnBC,oBAAqB,MAmBVC,EAAQC,YAhBL,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBL,EAAcQ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQC,EAAOC,MACb,KAAKhB,EAA+B,IAC1BiB,EAAYF,EAAZE,QAER,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEH,oBAAqBS,IAIzB,QACE,OAAON,IAMXV,EAAiBmB,IAAeC,WAAf,EAAmBhB,KC3BzBiB,SAAiB,SAACC,GAAU,IAC/BC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,WAAYC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAErC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OACEE,IAAKR,EACLS,IAAKP,EACLK,UAAU,yBAEZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BACXL,GAEHE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACZN,EAAWS,KAAK,aAEnBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACZJ,MAaTL,EAAea,aAAe,CAC5BV,WAAY,GACZE,SAAU,cC/BCS,EAAsB,SAAAC,GAA0C,IAAvCC,EAAuCD,EAAvCC,gBAAiBC,EAAsBF,EAAtBE,gBAKrD,OAJAC,oBAAU,WACRD,KACC,CAACA,IAGFX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACZO,EAAgBG,IAAI,SAACC,GAAe,IAEjCC,EAKED,EALFC,KACAjB,EAIEgB,EAJFhB,MACAkB,EAGEF,EAHFE,aACAnB,EAEEiB,EAFFjB,WACAE,EACEe,EADFf,SAGF,OACEC,EAAAC,EAAAC,cAACe,EAAD,CACEC,IAAKH,EACLA,KAAMA,EACNjB,MAAOA,EACPF,SAAUoB,EACVnB,WAAYA,EACZE,SAAUA,EAASoB,WAa/BX,EAAoBD,aAAe,CACjCG,gBAAiB,gBCtCNU,EAAwBC,YAFhB,SAAAtC,GAAK,OAAIA,GAI5B,SAAA0B,GAA6B,IAA1B7B,EAA0B6B,EAA1B7B,oBACD,IAAKA,EACH,MAAO,GAFkB,IAKnB0C,EAAyB1C,EAAzB0C,UAAWC,EAAc3C,EAAd2C,UAEnB,OAAOD,EAAUT,IAAI,SAAAW,GAAA,IAAGT,EAAHS,EAAGT,KAAH,OAAcQ,EAAUR,OCJ3CU,EAAqB,CACzBd,gBLD6B,kBAAM,SAACe,GACpCC,MAAM,+DACHC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAnB,GAAc,IAAXsB,EAAWtB,EAAXsB,KACPL,EATkB,SAAAK,GAAI,MAAK,CAC/B3C,KAAMhB,EACNiB,QAAS0C,GAOIC,CAAgBD,SKAzBE,EAAWC,YARO,SAAAnD,GAAK,MAAK,CAChC2B,gBAAiBU,EAAsBrC,KAQtB0C,EADFS,CAEf1B,GCKa2B,EAbH,kBACVnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAUvD,MAAOA,GACfmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEbH,EAAAC,EAAAC,cAAA,eACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WACdH,EAAAC,EAAAC,cAAC+B,EAAD,OAEFjC,EAAAC,EAAAC,cAAA,oCCVNmC,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.c588a58a.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SAVE_RESTAURANTS: 'SAVE_RESTAURANTS',\n};\n\nconst saveRestaurants = data => ({\n  type: ACTION_TYPES.SAVE_RESTAURANTS,\n  payload: data,\n});\n\nexport const loadRestaurants = () => (dispatch) => {\n  fetch('https://mate-uber-eats-api.herokuapp.com/api/v1/restaurants')\n    .then(res => res.json())\n    .then(({ data }) => {\n      dispatch(saveRestaurants(data));\n    });\n};\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ACTION_TYPES } from './actions';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n|| compose();\n\nconst middlewares = [thunk];\n\nconst initialState = {\n  restaurantsListData: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.SAVE_RESTAURANTS: {\n      const { payload } = action;\n\n      return {\n        ...state,\n        restaurantsListData: payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport const store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './RestaurantCard.scss';\n\nexport const RestaurantCard = (props) => {\n  const { imageUrl, categories, title, etaRange } = props;\n\n  return (\n    <div className=\"restaurant-card\">\n      <img\n        src={imageUrl}\n        alt={title}\n        className=\"restaurant-card__img\"\n      />\n      <h2 className=\"restaurant-card__title\">\n        {title}\n      </h2>\n      <div className=\"restaurant-card__categories\">\n        {categories.join(' â€¢ ')}\n      </div>\n      <div className=\"restaurant-card__eta\">\n        {etaRange}\n      </div>\n    </div>\n  );\n};\n\nRestaurantCard.propTypes = {\n  imageUrl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.string),\n  etaRange: PropTypes.string,\n};\n\nRestaurantCard.defaultProps = {\n  categories: [],\n  etaRange: '',\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { RestaurantCard } from '../RestaurantCard/RestaurantCard';\nimport './RestaurantsListPage.scss';\n\nexport const RestaurantsListPage = ({ restaurantsData, loadRestaurants }) => {\n  useEffect(() => {\n    loadRestaurants();\n  }, [loadRestaurants]);\n\n  return (\n    <div className=\"restaurants-list\">\n      {restaurantsData.map((restaurant) => {\n        const {\n          uuid,\n          title,\n          heroImageUrl,\n          categories,\n          etaRange,\n        } = restaurant;\n\n        return (\n          <RestaurantCard\n            key={uuid}\n            uuid={uuid}\n            title={title}\n            imageUrl={heroImageUrl}\n            categories={categories}\n            etaRange={etaRange.text}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nRestaurantsListPage.propTypes = {\n  restaurantsData: PropTypes.arrayOf(PropTypes.shape({})),\n  loadRestaurants: PropTypes.func.isRequired,\n};\n\nRestaurantsListPage.defaultProps = {\n  restaurantsData: [],\n};\n","import { createSelector } from 'reselect';\n\nconst rootSelector = state => state;\n\nexport const selectRestaurantsList = createSelector(\n  rootSelector,\n  ({ restaurantsListData }) => {\n    if (!restaurantsListData) {\n      return [];\n    }\n\n    const { feedItems, storesMap } = restaurantsListData;\n\n    return feedItems.map(({ uuid }) => storesMap[uuid]);\n  }\n);\n","import { connect } from 'react-redux';\nimport { RestaurantsListPage } from './RestaurantsListPage';\nimport { selectRestaurantsList } from '../../store/selectors';\nimport { loadRestaurants } from '../../store/actions';\n\nconst mapStateToProps = state => ({\n  restaurantsData: selectRestaurantsList(state),\n});\n\nconst mapDispatchToProps = {\n  loadRestaurants,\n};\n\nconst Enhanced = connect(\n  mapStateToProps, mapDispatchToProps\n)(RestaurantsListPage);\n\nexport { Enhanced as RestaurantsListPage };\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport './App.scss';\nimport { store } from './store';\nimport { RestaurantsListPage } from './components/RestaurantsListPage';\n// import Header from \"./components/Header/Header\";\n\nconst App = () => (\n  <Provider store={store}>\n    <div className=\"page\">\n      {/* <Header /> */}\n      <header />\n      <main className=\"content\">\n        <RestaurantsListPage />\n      </main>\n      <footer>Uber Eats</footer>\n    </div>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/main.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}